theme(plot.title = element_text(hjust = 0.5)) +
geom_boxplot()
split_age = data %>% mutate(Age = case_when(
Age > 0 & Age <= 10 ~ "0~10",
Age > 10 & Age <= 20 ~ "10~20",
Age > 20 & Age <= 30 ~ "20~30",
Age > 30 & Age <= 40 ~ "30~40",
Age > 40 & Age <= 50 ~ "40~50",
Age > 50 & Age <= 60 ~ "50~60",
Age > 60 & Age <= 70 ~ "60~70",
Age > 70 & Age <= 80 ~ "70~80",
Age > 80 & Age <= 90 ~ "80~90",
Age > 90 & Age <= 100 ~ "90~100",
Age > 100 ~ ">100"
))
ggplot(split_age, aes(x = Survival.Months, y = Age)) +
labs(title = "Survival Months by Age Group") +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 18, color = "darkblue")) +
geom_boxplot()
split_age = data %>% mutate(Age = case_when(
Age > 0 & Age <= 10 ~ "0~10",
Age > 10 & Age <= 20 ~ "10~20",
Age > 20 & Age <= 30 ~ "20~30",
Age > 30 & Age <= 40 ~ "30~40",
Age > 40 & Age <= 50 ~ "40~50",
Age > 50 & Age <= 60 ~ "50~60",
Age > 60 & Age <= 70 ~ "60~70",
Age > 70 & Age <= 80 ~ "70~80",
Age > 80 & Age <= 90 ~ "80~90",
Age > 90 & Age <= 100 ~ "90~100",
Age > 100 ~ ">100"
))
ggplot(split_age, aes(x = Survival.Months, y = Age)) +
labs(title = "Survival Months by Age Group") +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 18, color = "darkblue")) +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
legend.text = element_text(size=7),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
plot.title = element_text(hjust = 0),
plot.subtitle = element_text(size=8, hjust=0, face="italic", color="black"),
axis.text.x = element_text(size = 10, face = "bold", color="black")) +
theme(text = element_text(family = "Comic Sans MS"))
split_age = data %>% mutate(Age = case_when(
Age > 0 & Age <= 10 ~ "0~10",
Age > 10 & Age <= 20 ~ "10~20",
Age > 20 & Age <= 30 ~ "20~30",
Age > 30 & Age <= 40 ~ "30~40",
Age > 40 & Age <= 50 ~ "40~50",
Age > 50 & Age <= 60 ~ "50~60",
Age > 60 & Age <= 70 ~ "60~70",
Age > 70 & Age <= 80 ~ "70~80",
Age > 80 & Age <= 90 ~ "80~90",
Age > 90 & Age <= 100 ~ "90~100",
Age > 100 ~ ">100"
))
ggplot(split_age, aes(x = Survival.Months, y = Age)) +
labs(title = "Survival Months by Age Group") +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 18, color = "darkblue")) +
theme(text = element_text(family = "Comic Sans MS"))
split_age = data %>% mutate(Age = case_when(
Age > 0 & Age <= 10 ~ "0~10",
Age > 10 & Age <= 20 ~ "10~20",
Age > 20 & Age <= 30 ~ "20~30",
Age > 30 & Age <= 40 ~ "30~40",
Age > 40 & Age <= 50 ~ "40~50",
Age > 50 & Age <= 60 ~ "50~60",
Age > 60 & Age <= 70 ~ "60~70",
Age > 70 & Age <= 80 ~ "70~80",
Age > 80 & Age <= 90 ~ "80~90",
Age > 90 & Age <= 100 ~ "90~100",
Age > 100 ~ ">100"
))
ggplot(split_age, aes(x = Survival.Months, y = Age)) +
labs(title = "Survival Months by Age Group") +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 18, color = "darkblue"))
split_age = data %>% mutate(Age = case_when(
Age > 0 & Age <= 10 ~ "0~10",
Age > 10 & Age <= 20 ~ "10~20",
Age > 20 & Age <= 30 ~ "20~30",
Age > 30 & Age <= 40 ~ "30~40",
Age > 40 & Age <= 50 ~ "40~50",
Age > 50 & Age <= 60 ~ "50~60",
Age > 60 & Age <= 70 ~ "60~70",
Age > 70 & Age <= 80 ~ "70~80",
Age > 80 & Age <= 90 ~ "80~90",
Age > 90 & Age <= 100 ~ "90~100",
Age > 100 ~ ">100"
))
ggplot(split_age, aes(x = Survival.Months, y = Age)) +
labs(title = "Survival Months by Age Group") +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 25))
split_age = data %>% mutate(Age = case_when(
Age > 0 & Age <= 10 ~ "0~10",
Age > 10 & Age <= 20 ~ "10~20",
Age > 20 & Age <= 30 ~ "20~30",
Age > 30 & Age <= 40 ~ "30~40",
Age > 40 & Age <= 50 ~ "40~50",
Age > 50 & Age <= 60 ~ "50~60",
Age > 60 & Age <= 70 ~ "60~70",
Age > 70 & Age <= 80 ~ "70~80",
Age > 80 & Age <= 90 ~ "80~90",
Age > 90 & Age <= 100 ~ "90~100",
Age > 100 ~ ">100"
))
ggplot(split_age, aes(x = Survival.Months, y = Age)) +
labs(title = "Survival Months by Age Group") +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 20))
split_age = data %>% mutate(Age = case_when(
Age > 0 & Age <= 10 ~ "0~10",
Age > 10 & Age <= 20 ~ "10~20",
Age > 20 & Age <= 30 ~ "20~30",
Age > 30 & Age <= 40 ~ "30~40",
Age > 40 & Age <= 50 ~ "40~50",
Age > 50 & Age <= 60 ~ "50~60",
Age > 60 & Age <= 70 ~ "60~70",
Age > 70 & Age <= 80 ~ "70~80",
Age > 80 & Age <= 90 ~ "80~90",
Age > 90 & Age <= 100 ~ "90~100",
Age > 100 ~ ">100"
))
ggplot(split_age, aes(x = Survival.Months, y = Age)) +
labs(title = "Survival Months by Age Group") +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5, size = 20))
split_age = data %>% mutate(Age = case_when(
Age > 0 & Age <= 10 ~ "0~10",
Age > 10 & Age <= 20 ~ "10~20",
Age > 20 & Age <= 30 ~ "20~30",
Age > 30 & Age <= 40 ~ "30~40",
Age > 40 & Age <= 50 ~ "40~50",
Age > 50 & Age <= 60 ~ "50~60",
Age > 60 & Age <= 70 ~ "60~70",
Age > 70 & Age <= 80 ~ "70~80",
Age > 80 & Age <= 90 ~ "80~90",
Age > 90 & Age <= 100 ~ "90~100",
Age > 100 ~ ">100"
))
ggplot(split_age, aes(x = Survival.Months, y = Age)) +
labs(title = "Survival Months by Age Group") +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5, size = 18))
split_age = data %>% mutate(Age = case_when(
Age > 0 & Age <= 10 ~ "0~10",
Age > 10 & Age <= 20 ~ "10~20",
Age > 20 & Age <= 30 ~ "20~30",
Age > 30 & Age <= 40 ~ "30~40",
Age > 40 & Age <= 50 ~ "40~50",
Age > 50 & Age <= 60 ~ "50~60",
Age > 60 & Age <= 70 ~ "60~70",
Age > 70 & Age <= 80 ~ "70~80",
Age > 80 & Age <= 90 ~ "80~90",
Age > 90 & Age <= 100 ~ "90~100",
Age > 100 ~ ">100"
))
ggplot(split_age, aes(x = Survival.Months, y = Age)) +
labs(title = "Survival Months by Age Group", x ="Survival Months", y = "Age Group") +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5, size = 15))
split_age = data %>% mutate(Age = case_when(
Age > 0 & Age <= 10 ~ "0~10",
Age > 10 & Age <= 20 ~ "10~20",
Age > 20 & Age <= 30 ~ "20~30",
Age > 30 & Age <= 40 ~ "30~40",
Age > 40 & Age <= 50 ~ "40~50",
Age > 50 & Age <= 60 ~ "50~60",
Age > 60 & Age <= 70 ~ "60~70",
Age > 70 & Age <= 80 ~ "70~80",
Age > 80 & Age <= 90 ~ "80~90",
Age > 90 & Age <= 100 ~ "90~100",
Age > 100 ~ ">100"
))
ggplot(split_age, aes(x = Survival.Months, y = Age)) +
labs(title = "Survival Months by Age Group", x ="Survival Months", y = "Age Group") +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
theme_set(theme_minimal() + theme_custom)
library(tidyverse)
library(ggplot2)
library(plotly)
library(shiny)
raw_data = read.csv("breast_cancer.csv")
#Convert Grade into integer format
data = raw_data %>% mutate(Grade = case_when(
str_detect(Grade, "1") ~ 1L,
str_detect(Grade, "2") ~ 2L,
str_detect(Grade, "3") ~ 3L,
str_detect(Grade, regex("anaplastic; grade iv", ignore_case = TRUE)) ~ 4L
))
theme_custom <- theme(
text = element_text(size = 12),
panel.grid = element_blank(),
panel.grid.major.y = element_line(colour = "#e3e1e1",
linetype = 2),
plot.title.position = 'plot',
legend.position = 'top',
legend.title = element_blank()
)
split_age = data %>% mutate(Age = case_when(
Age > 0 & Age <= 10 ~ "0~10",
Age > 10 & Age <= 20 ~ "10~20",
Age > 20 & Age <= 30 ~ "20~30",
Age > 30 & Age <= 40 ~ "30~40",
Age > 40 & Age <= 50 ~ "40~50",
Age > 50 & Age <= 60 ~ "50~60",
Age > 60 & Age <= 70 ~ "60~70",
Age > 70 & Age <= 80 ~ "70~80",
Age > 80 & Age <= 90 ~ "80~90",
Age > 90 & Age <= 100 ~ "90~100",
Age > 100 ~ ">100"
))
ggplot(split_age, aes(x = Survival.Months, y = Age)) +
labs(title = "Survival Months by Age Group", x ="Survival Months", y = "Age Group") +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
theme_set(theme_minimal() + theme_custom)
split_age = data %>% mutate(Age = case_when(
Age > 0 & Age <= 10 ~ "0~10",
Age > 10 & Age <= 20 ~ "10~20",
Age > 20 & Age <= 30 ~ "20~30",
Age > 30 & Age <= 40 ~ "30~40",
Age > 40 & Age <= 50 ~ "40~50",
Age > 50 & Age <= 60 ~ "50~60",
Age > 60 & Age <= 70 ~ "60~70",
Age > 70 & Age <= 80 ~ "70~80",
Age > 80 & Age <= 90 ~ "80~90",
Age > 90 & Age <= 100 ~ "90~100",
Age > 100 ~ ">100"
))
ggplot(split_age, aes(x = Survival.Months, y = Age)) +
labs(title = "Survival Months by Age Group", x ="Survival Months", y = "Age Group") +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
theme_bw()
ggplot(data, aes(x = Survival.Months, y = Marital.Status)) +
labs(title = "Survival Months by Marital Status", x = "Survival Months", y = "Marital Status") +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
theme_bw()
stats_summary(data$Marital.Status)
ggplot(data, aes(x = Survival.Months, y = Marital.Status)) +
labs(title = "Survival Months by Marital Status", x = "Survival Months", y = "Marital Status") +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
theme_bw()
stats_summary <- function(x){
list(
count = length(x),
mean = mean(x),
median = median(x),
IQR = IQR(x),
sd = sd(x),
max = max(x),
min = min(x)
)
}
stats_summary(data$Marital.Status)
ggplot(data, aes(x = Survival.Months, y = Marital.Status)) +
labs(title = "Survival Months by Marital Status", x = "Survival Months", y = "Marital Status") +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
theme_bw()
stats_summary <- function(x){
list(
count = length(x),
mean = mean(x),
median = median(x),
IQR = IQR(x),
sd = sd(x),
max = max(x),
min = min(x)
)
}
data$Survival.Months
stats_summary(filter(data, Marital.Status == "Separated")$Survival.Months)
ggplot(data, aes(x = Survival.Months, y = Marital.Status)) +
labs(title = "Survival Months by Marital Status", x = "Survival Months", y = "Marital Status") +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
theme_bw()
stats_summary <- function(x){
list(
count = length(x),
mean = mean(x),
median = median(x),
IQR = IQR(x),
sd = sd(x),
max = max(x),
min = min(x)
)
}
data$Survival.Months
stats_summary(filter(data, Marital.Status == "Separated")$Survival.Months)
fivenum(filter(data, Marital.Status == "Separated")$Survival.Months)
ggplot(data, aes(x = Survival.Months, y = Marital.Status)) +
labs(title = "Survival Months by Marital Status", x = "Survival Months", y = "Marital Status") +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
theme_bw()
stats_summary <- function(x){
list(
count = length(x),
mean = mean(x),
median = median(x),
IQR = IQR(x),
sd = sd(x),
max = max(x),
min = min(x)
)
}
data$Survival.Months
stats_summary(filter(data, Marital.Status != "Separated")$Survival.Months)
fivenum(filter(data, Marital.Status == "Separated")$Survival.Months)
ggplot(data, aes(x = Survival.Months, y = Marital.Status)) +
labs(title = "Survival Months by Marital Status", x = "Survival Months", y = "Marital Status") +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
theme_bw()
fivenum(filter(data, Marital.Status == "Separated")$Survival.Months)
fivenum(filter(data, Marital.Status != "Separated")$Survival.Months)
library(tidyverse)
library(ggplot2)
library(plotly)
library(shiny)
raw_data = read.csv("breast_cancer.csv")
#Convert Grade into integer format
data = raw_data %>% mutate(Grade = case_when(
str_detect(Grade, "1") ~ 1L,
str_detect(Grade, "2") ~ 2L,
str_detect(Grade, "3") ~ 3L,
str_detect(Grade, regex("anaplastic; grade iv", ignore_case = TRUE)) ~ 4L
))
data <- data %>%
mutate(Status = ifelse(Status == "Alive", 0, 1))
library(tidyverse)
library(ggplot2)
library(plotly)
library(shiny)
raw_data = read.csv("breast_cancer.csv")
#Convert Grade into integer format
data = raw_data %>% mutate(Grade = case_when(
str_detect(Grade, "1") ~ 1L,
str_detect(Grade, "2") ~ 2L,
str_detect(Grade, "3") ~ 3L,
str_detect(Grade, regex("anaplastic; grade iv", ignore_case = TRUE)) ~ 4L
))
data <- data %>%
mutate(Status = ifelse(Status == "Alive", 0, 1))
str(data)
library(tidyverse)
library(ggplot2)
library(plotly)
library(survival)
library(survminer)
raw_data = read.csv("breast_cancer.csv")
#Convert Grade and Status into integer format
data = raw_data %>% mutate(Grade = case_when(
str_detect(Grade, "1") ~ 1L,
str_detect(Grade, "2") ~ 2L,
str_detect(Grade, "3") ~ 3L,
str_detect(Grade, regex("anaplastic; grade iv", ignore_case = TRUE)) ~ 4L
))
data <- data %>%
mutate(Status = ifelse(Status == "Alive", 0, 1))
fit = survfit(data ~ "T Stage", data = data)
ggsurvplot(fit, data = data, pval = TRUE, risk.table = TRUE)
fit = survfit(data ~ "T Stage", data = data)
#ggsurvplot(fit, data = data, pval = TRUE, risk.table = TRUE)
fit = survfit(data ~ T Stage, data = data)
#ggsurvplot(fit, data = data, pval = TRUE, risk.table = TRUE)
fit = survfit(data ~ "T Stage", data = data)
#ggsurvplot(fit, data = data, pval = TRUE, risk.table = TRUE)
sur_data = Surv(time = data$Survival.Months, event = ifelse(data$Status == "Dead", 1, 0))
fit = survfit(sur_data ~ "T Stage", data = data)
ggsurvplot(fit, data = data, pval = TRUE, risk.table = TRUE)
clean_data = data
sur_data = Surv(time = data$Survival.Months, event = ifelse(data$Status == "Dead", 1, 0))
fit = survfit(sur_data ~ "T Stage", data = clean_data)
ggsurvplot(fit, data = clean_data, pval = TRUE, risk.table = TRUE)
clean_data = data
sur_data = Surv(time = data$Survival.Months, event = ifelse(data$Status == "Dead", 1, 0))
fit = survfit(sur_data ~ "T Stage", data = clean_data)
ggsurvplot(fit, data = breast_data,
pval = TRUE,
risk.table = TRUE,
ggtheme = theme_minimal(),
title = "Survival Curve by T Stage")
clean_data = data
sur_data = Surv(time = data$Survival.Months, event = ifelse(data$Status == "Dead", 1, 0))
fit = survfit(sur_data ~ "T Stage")
ggsurvplot(fit, data = breast_data,
pval = TRUE,
risk.table = TRUE,
ggtheme = theme_minimal(),
title = "Survival Curve by T Stage")
library(tidyverse)
library(ggplot2)
library(plotly)
library(survival)
library(survminer)
raw_data = read.csv("breast_cancer.csv")
#Convert Grade into integer format
data = raw_data %>% mutate(Grade = case_when(
str_detect(Grade, "1") ~ 1L,
str_detect(Grade, "2") ~ 2L,
str_detect(Grade, "3") ~ 3L,
str_detect(Grade, regex("anaplastic; grade iv", ignore_case = TRUE)) ~ 4L
))
clean_data = data
sur_data = Surv(time = data$Survival.Months, event = ifelse(data$Status == "Dead", 1, 0))
fit = survfit(sur_data ~ "T Stage")
ggsurvplot(fit, data = breast_data,
pval = TRUE,
risk.table = TRUE,
ggtheme = theme_minimal(),
title = "Survival Curve by T Stage")
clean_data = data
sur_data = Surv(time = data$Survival.Months, event = ifelse(data$Status == "Dead", 1, 0))
fit = survfit(sur_data$"T Stage" ~ 1)
ggsurvplot(fit, data = breast_data,
pval = TRUE,
risk.table = TRUE,
ggtheme = theme_minimal(),
title = "Survival Curve by T Stage")
clean_data = data
sur_data = Surv(time = data$Survival.Months, event = ifelse(data$Status == "Dead", 1, 0))
fit = survfit(sur_data ~ "T Stage")
ggsurvplot(fit, data = breast_data,
pval = TRUE,
risk.table = TRUE,
ggtheme = theme_minimal(),
title = "Survival Curve by T Stage")
sur_data = Surv(time = data$Survival.Months, event = ifelse(data$Status == "Dead", 1, 0))
fit = survfit(sur_data ~ T Stage, data = data)
ggsurvplot(fit, data = breast_data,
pval = TRUE,
risk.table = TRUE,
ggtheme = theme_minimal(),
title = "Survival Curve by T Stage")
sur_data = Surv(time = data$Survival.Months, event = ifelse(data$Status == "Dead", 1, 0))
fit = survfit(sur_data ~ T.Stage, data = data)
ggsurvplot(fit, data = breast_data,
pval = TRUE,
risk.table = TRUE,
ggtheme = theme_minimal(),
title = "Survival Curve by T Stage")
sur_data = Surv(time = data$Survival.Months, event = ifelse(data$Status == "Dead", 1, 0))
fit = survfit(sur_data ~ T.Stage, data = data)
ggsurvplot(fit, data = data,
pval = TRUE,
risk.table = TRUE,
ggtheme = theme_minimal(),
title = "Survival Curve by T Stage")
install.packages("xfun")
sur_data = Surv(time = data$Survival.Months, event = ifelse(data$Status == "Dead", 1, 0))
fit = survfit(sur_data ~ T.Stage, data = data)
ggsurvplot(fit, data = data,
pval = TRUE,
risk.table = TRUE,
ggtheme = theme_minimal(),
title = "Survival Curve by T Stage")
library(tidyverse)
library(ggplot2)
library(plotly)
library(survival)
library(survminer)
raw_data = read.csv("breast_cancer.csv")
#Convert Grade into integer format
data = raw_data %>% mutate(Grade = case_when(
str_detect(Grade, "1") ~ 1L,
str_detect(Grade, "2") ~ 2L,
str_detect(Grade, "3") ~ 3L,
str_detect(Grade, regex("anaplastic; grade iv", ignore_case = TRUE)) ~ 4L
))
sur_data = Surv(time = data$Survival.Months, event = ifelse(data$Status == "Dead", 1, 0))
fit = survfit(sur_data ~ T.Stage, data = data)
ggsurvplot(fit, data = data,
pval = TRUE,
risk.table = TRUE,
ggtheme = theme_minimal(),
title = "Survival Curve by T Stage")
packageVersion("xfun")
install.packages("xfun")
install.packages("xfun")
detach("package:xfun", unload = TRUE)
detach(package:xfun, unload = TRUE)
sur_data = Surv(time = data$Survival.Months, event = ifelse(data$Status == "Dead", 1, 0))
fit = survfit(sur_data ~ T.Stage, data = data)
ggsurvplot(fit, data = data, pval = TRUE, risk.table = TRUE)
library(tidyverse)
library(ggplot2)
library(plotly)
library(survival)
library(survminer)
raw_data = read.csv("breast_cancer.csv")
#Convert Grade into integer format
data = raw_data %>% mutate(Grade = case_when(
str_detect(Grade, "1") ~ 1L,
str_detect(Grade, "2") ~ 2L,
str_detect(Grade, "3") ~ 3L,
str_detect(Grade, regex("anaplastic; grade iv", ignore_case = TRUE)) ~ 4L
))
sur_data = Surv(time = data$Survival.Months, event = ifelse(data$Status == "Dead", 1, 0))
fit = survfit(sur_data ~ T.Stage, data = data)
ggsurvplot(fit, data = data, pval = TRUE, risk.table = TRUE)
